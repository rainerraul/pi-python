{
  "name": "Pi-python",
  "tagline": "python scripts pi",
  "body": "# pi-python\r\nI had bought this Odroid-Weatherboard by a german distributor. The compact dimensions allows three sensors on one Board to attach all to a raspberry pi. The quick2wire-libraries i used, makes it possible to build code for weather-apps in python. During the python code works in the background, the pi can make collected weatherdata public over a web-server for an example. But first they have to be stored on local memory. For later outputting data and visualisation on a browser, i have to create some php-scripts.<br>\r\n<b>(14 05 2015)</b><br>\r\nThe programming of these sensors on the weatherboard are complete. The next thing what i will do is to create a graphical interface for websites in php, a table output and some search routines.\r\nto be continued...<br>\r\n<b>(10 06 2015)</b><br>\r\nAdded a python-script called lcdprint. You can send a message to a twi-interfaced YuroBot display 4x20.<br>\r\nopen a ssh-shell and type: <font color=\"red\"><b><p>lcdprint linenumber(0-3) \"Hello Message\".</p></b></font> Use this python-file to display data from\r\nsensor devices, that are connected on the same i2c bus, where the LCD-Display is.<br>\r\n<b>(19 11 2016)</b><br>\r\nThe sht31 humidity sensor script from Sensirion runs without checking the crc bytes(byte3 and byte6 are the checksum bytes). Since i start datalogging the sensor have not fail and works fine.\r\nLM75 is a sensor, that measure temperature and drive an open collector outlet. Also you can configurate a hysteresis value and a maximum temperature value. The outlet is high, when current temperature is over its maximum and low, when the current temperature is under the hysteresis value. It acts like a thermostate for heating.\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}